


ARM Macro Assembler    Page 1 


    1 00000000                 thumb
    2 00000000                 area             moncode, code, readonly
    3 00000000         
    4 00000000                 export           partRe
    5 00000000         
    6 00000000 0000003F 
                       masque  equ              0x3F        ; pour faire un mod
                                                            ulo 64 
    7 00000000 00000040 
                       N       equ              64
    8 00000000         
    9 00000000         partRe  proc
   10 00000000         ;on recup l'argument
   11 00000000         ; ici r0 contient k, r1 l'adresse de la table du signal,
                        et r2 l'adresse de la table des cosinus. On les empile 
                       pour pouvoir réutiliser les registres.
   12 00000000 B401            push             {r0}
   13 00000002 B402            push             {r1}
   14 00000004 B404            push             {r2}
   15 00000006         
   16 00000006 F04F 0C00       mov              r12, #0x00  ;on met la variable
                                                             d'itération à zéro
                                                            
   17 0000000A F84D CD04       push             {r12}       ; on met un zéro to
                                                            ut en haut de la pi
                                                            le : c'est cette va
                                                            leur qui sera incré
                                                            mentée à la fin de 
                                                            chaque itération (i
                                                            e la valeur de reto
                                                            ur)
   18 0000000E         
   19 0000000E         
   20 0000000E         loop
   21 0000000E         
   22 0000000E         ; on dépile la valeur de retour et les arguments
   23 0000000E BC01            pop              {r0}        ;valeur de retour
   24 00000010 BC02            pop              {r1}        ;table des cosinus
   25 00000012 BC04            pop              {r2}        ;table du signal
   26 00000014 BC08            pop              {r3}        ;k
   27 00000016         
   28 00000016         ;on réempile immédiatement les arguments sans les modifi
                       er
   29 00000016 B408            push             {r3}        ;k
   30 00000018 B404            push             {r2}        ;signal
   31 0000001A B402            push             {r1}        ;cosinus
   32 0000001C         
   33 0000001C         
   34 0000001C FB03 F30C       mul              r3, r12     ;r3=ik
   35 00000020 F003 033F       and              r3, #masque ; r3 contient ik mo
                                                            dulo 64 
   36 00000024         
   37 00000024         ; on ajoute position et on recup la valeur
   38 00000024 5EC9            ldrsh            r1,  [r1,r3] ; r1 contient cos(
                                                            ik)
   39 00000026 F932 200C       ldrsh            r2,  [r2,r12] 
                                                            ; r2 contient x(i)
   40 0000002A         
   41 0000002A FB01 F102       mul              r1, r2      ;r1=x(i)cos(ik) 



ARM Macro Assembler    Page 2 


   42 0000002E 4408            add              r0, r1      ;on ajoute r1 à la 
                                                            valeur de retour
   43 00000030 B401            push             {r0}        ;on empile la valeu
                                                            r de retour
   44 00000032         
   45 00000032         
   46 00000032         ;r12 contient la variable d'iteration
   47 00000032 F10C 0C01       add              r12, #1
   48 00000036 F1BC 0F40       cmp              r12, #N     ; nbe d'itérations
   49 0000003A D1E8            bne              loop
   50 0000003C E7FF            b                fin
   51 0000003E         
   52 0000003E         fin
   53 0000003E         ; on dépile les arguments qui restent
   54 0000003E BC01            pop              {r0}
   55 00000040 BC02            pop              {r1}
   56 00000042         
   57 00000042 4770            bx               lr
   58 00000044                 endp
   59 00000044                 end
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\partre.d -o.\obj\partre.o -I.\RTE\_Simu -IC:\Users\Marianne\
AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\Marianne\
AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="__
EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SET
A 529" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --list=part
re.lst partRe.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

fin 0000003E

Symbol: fin
   Definitions
      At line 52 in file partRe.s
   Uses
      At line 50 in file partRe.s
Comment: fin used once
loop 0000000E

Symbol: loop
   Definitions
      At line 20 in file partRe.s
   Uses
      At line 49 in file partRe.s
Comment: loop used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 2 in file partRe.s
   Uses
      None
Comment: moncode unused
partRe 00000000

Symbol: partRe
   Definitions
      At line 9 in file partRe.s
   Uses
      At line 4 in file partRe.s
Comment: partRe used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000040

Symbol: N
   Definitions
      At line 7 in file partRe.s
   Uses
      At line 48 in file partRe.s
Comment: N used once
masque 0000003F

Symbol: masque
   Definitions
      At line 6 in file partRe.s
   Uses
      At line 35 in file partRe.s
Comment: masque used once
2 symbols
341 symbols in table
