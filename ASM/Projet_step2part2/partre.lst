


ARM Macro Assembler    Page 1 


    1 00000000                 thumb
    2 00000000                 area             moncode, code, readonly
    3 00000000         
    4 00000000                 export           partRe
    5 00000000         
    6 00000000 0000003F 
                       masque  equ              0x3F        ; pour faire un mod
                                                            ulo 64 
    7 00000000         
    8 00000000         partRe  proc
    9 00000000         ;on recup l'argument
   10 00000000         ; ici r0 contient k, r1 l'adresse de la table du signal,
                        et r2 l'adresse de la table des cosinus. On les empile 
                       pour pouvoir réutiliser les registres.
   11 00000000 B401            push             {r0}
   12 00000002 B402            push             {r1}
   13 00000004 B404            push             {r2}
   14 00000006         
   15 00000006 F04F 0C00       mov              r12, #0x00  ;on met la variable
                                                             d'itération à zéro
                                                            
   16 0000000A E001            b                loop
   17 0000000C F84D CD04       push             {r12}       ; on met un zéro to
                                                            ut en haut de la pi
                                                            le : c'est cette va
                                                            leur qui sera incré
                                                            mentée à la fin de 
                                                            chaque itération
   18 00000010         
   19 00000010         
   20 00000010         loop
   21 00000010         
   22 00000010         ; on dépile la valeur de retour et les arguments
   23 00000010 BC01            pop              {r0}        ;valeur de retour
   24 00000012 BC02            pop              {r1}        ;table des cosinus
   25 00000014 BC04            pop              {r2}        ;table du signal
   26 00000016 BC08            pop              {r3}        ;k
   27 00000018         
   28 00000018         ;on réempile immédiatement les arguments sans les modifi
                       er
   29 00000018 B408            push             {r3}        ;k
   30 0000001A B404            push             {r2}        ;signal
   31 0000001C B402            push             {r1}        ;cosinus
   32 0000001E         
   33 0000001E         
   34 0000001E FB03 F30C       mul              r3, r12     ;r3=ik
   35 00000022 F003 033F       and              r3, #masque ; r3 contient ik mo
                                                            dulo 64 
   36 00000026         
   37 00000026         ; on ajoute position et on recup la valeur
   38 00000026 F931 1013       ldrsh            r1,  [r1,r3, lsl #0x01] ; r1 co
                                                            ntient cos(ik)
   39 0000002A F932 201C       ldrsh            r2,  [r2,r12, lsl #0x01] 
                                                            ; r2 contient x(i)
   40 0000002E         
   41 0000002E FB01 F102       mul              r1, r2      ;r1=x(i)cos(ik)
   42 00000032 4408            add              r0, r1      ;on ajoute r1 à la 
                                                            valeur de retour
   43 00000034 B401            push             {r0}        ;on empile la valeu



ARM Macro Assembler    Page 2 


                                                            r de retour
   44 00000036         
   45 00000036         
   46 00000036         ;r12 contient la variable d'iteration
   47 00000036 F10C 0C01       add              r12, #1
   48 0000003A F1BC 0F40       cmp              r12, #64    ; nbe d'itérations
   49 0000003E D1E7            bne              loop
   50 00000040 E7FF            b                fin
   51 00000042         
   52 00000042         fin
   53 00000042         ; on dépile les arguments qui restent
   54 00000042 BC01            pop              {r0}
   55 00000044 BC02            pop              {r1}
   56 00000046 BC02            pop              {r1}
   57 00000048 BC02            pop              {r1}
   58 0000004A 4770            bx               lr
   59 0000004C                 endp
   60 0000004C                 end
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\partre.d -o.\obj\partre.o -I.\RTE\_Simu -IC:\Users\Marianne\
AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\Marianne\
AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="__
EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SET
A 529" --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --list=part
re.lst partRe.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

fin 00000042

Symbol: fin
   Definitions
      At line 52 in file partRe.s
   Uses
      At line 50 in file partRe.s
Comment: fin used once
loop 00000010

Symbol: loop
   Definitions
      At line 20 in file partRe.s
   Uses
      At line 16 in file partRe.s
      At line 49 in file partRe.s

moncode 00000000

Symbol: moncode
   Definitions
      At line 2 in file partRe.s
   Uses
      None
Comment: moncode unused
partRe 00000000

Symbol: partRe
   Definitions
      At line 8 in file partRe.s
   Uses
      At line 4 in file partRe.s
Comment: partRe used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

masque 0000003F

Symbol: masque
   Definitions
      At line 6 in file partRe.s
   Uses
      At line 35 in file partRe.s
Comment: masque used once
1 symbol
340 symbols in table
